version: '3.9'




###################################################################
#                                                                 #
#  This docker-compose.yaml file comprehends 5 profiles           #
#                                                                 #
#  - local:     development environment                           #
#  - catalog:   development of the frontend using the new backend #
#  - if:        staging environment                               #
#  - stifront:  frontend production environment                   #
#  - stiback:   backend production environment                    #
#                                                                 #
#  To setup a specific profile, run:                              #
#  docker-compose --profile <profile> up -d                       #
#                                                                 #
#  More information at https://docs.docker.com/compose/profiles/  #
#                                                                 #
###################################################################




volumes:
  railsdevdeps:
  railsdeps:
  nuxtdevdeps:
  data:




services:
  frontend:
    build:
      context: ./frontend
      target: production
    env_file:
      - ./frontend/.env
    ports:
      - 3000:3000
    profiles:
      - if
      - stifront

  frontdev:
    build:
      context: ./frontend
      target: development
    ports:
      - 3000:3000
    volumes:
      - nuxtdevdeps:/usr/src/app/node_modules
      - ./frontend:/usr/src/app
    env_file:
      - ./frontend/.env
    profiles:
      - local
      - catalog




  backend:
    build:
      context: ./backend
      target: production
      dockerfile: Dockerfile
    ports:
      - 3001:3000
    volumes:
      - railsdeps:/usr/src/app/vendor/bundle
      - ./backend/log:/usr/src/app/log
      - ./backend/public/system:/usr/src/app/public/system
    env_file:
      - ./backend/.env
    depends_on:
      - mongo
    profiles:
      - if
      - stiback

  backdev:
    build:
      context: ./backend
      target: development
      dockerfile: Dockerfile
    ports:
      - 3001:3000
    volumes:
      - railsdevdeps:/usr/src/app/vendor/bundle
      - ./backend:/usr/src/app
    env_file:
      - ./backend/.env
    depends_on:
      - mongo
    profiles:
      - local




  mongo:
    image: mongo:4.4.1-bionic
    ports:
      - 27017:27017
    env_file:
      - ./backend/.env
    volumes:
      - data:/data/db
    profiles:
      - local
      - if
      - stiback
      - catalog
      - cli


  

  catalogapp:
    build:
      context: ./server
      target: app
    ports:
      - 8080:8080
    depends_on:
      - mongo
    env_file:
      - ./server/.env
    profiles:
      - if
      - stiback
      - catalog

  catalogcli:
    build:
      context: ./server
      target: cli
    depends_on:
      - mongo
    env_file:
      - ./server/.env
    profiles:
      - cli




  caddydev:
    build:
      context: ./caddy
      target: dev
    ports:
      - 5000:5000
    profiles:
      - local

  caddysti:
    build:
      context: ./caddy
      target: sti
    ports:
      - 5000:5000
    profiles:
      - stiback

  caddy:
    build:
      context: ./caddy
      target: prod
    ports:
      - 80:80
      - 443:443
    profiles:
      - if




  prom:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml
    profiles:
      - monitoring

  mongoexporter:
    image: percona/mongodb_exporter:0.20
    command: ["--mongodb.uri=mongodb://mongo:27017"]
    ports:
      - 9216:9216
      - 17001:17001
    profiles:
    - monitoring

  grafana:
    image: grafana/grafana
    ports:
      - 7890:3000
    profiles:
      - monitoring
